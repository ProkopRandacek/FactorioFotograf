#!/bin/sh
MAXX=$(cat ./$1/mapInfo.json|jq '.maxx')
MAXY=$(cat ./$1/mapInfo.json|jq '.maxy')
MINX=$(cat ./$1/mapInfo.json|jq '.minx')
MINY=$(cat ./$1/mapInfo.json|jq '.miny')

if [[ $((${MINX#-} % 2)) -eq 1 ]]; then MINX=$((MINX-1)); fi
if [[ $((${MINY#-} % 2)) -eq 1 ]]; then MINY=$((MINY-1)); fi
if [[ $((${MAXY#-} % 2)) -eq 1 ]]; then MAXY=$((MAXY+1)); fi
if [[ $((${MAXY#-} % 2)) -eq 1 ]]; then MAXY=$((MAXY+1)); fi

MAXX=$((MAXX/2))
MAXY=$((MAXY/2))
MINX=$((MINX/2))
MINY=$((MINY/2))

for x in $(seq $MINX $MAXX); do
	for y in $(seq $MINY $MAXY); do
		bx=$((x * 2))
		by=$((y * 2))
		A="./$1/images/blank.png"
		B="./$1/images/blank.png"
		C="./$1/images/blank.png"
		D="./$1/images/blank.png"
		O="./$1/images/0/$3/$x/$y.png"
		mkdir "./$1/images/0/$3/$x" -p
		if [ -f "./$1/images/0/$2/$((bx + 0))/$((by + 0)).png" ]; then A="./$1/images/0/$2/$((bx + 0))/$((by + 0)).png"; fi
		if [ -f "./$1/images/0/$2/$((bx + 0))/$((by + 1)).png" ]; then B="./$1/images/0/$2/$((bx + 0))/$((by + 1)).png"; fi
		if [ -f "./$1/images/0/$2/$((bx + 1))/$((by + 0)).png" ]; then C="./$1/images/0/$2/$((bx + 1))/$((by + 0)).png"; fi
		if [ -f "./$1/images/0/$2/$((bx + 1))/$((by + 1)).png" ]; then D="./$1/images/0/$2/$((bx + 1))/$((by + 1)).png"; fi
		if [[ $A = $B && $A = $C && $A = $D ]]; then continue; fi # dont merge 4 blanks
		./imgmerge $A $C $B $D $O
	done
done
