#!/bin/sh
if [ $# -eq 0 ]; then
	echo "No save name supplied"
	exit 1
fi

# link mod
ln -sf $(pwd)/fotograf_1.0.0 ~/.factorio/mods/

# use our mod list
mv ~/.factorio/mods/mod-list.json ~/.factorio/mods/mod-list.json.backup
cp ./mod-list.json ~/.factorio/mods/mod-list.json

# clear garbage from last time
rm ~/.factorio/script-output/images/ -rf
rm ~/.factorio/script-output/mapInfo.json -f
rm ~/.factorio/script-output/done -f

# load the save and generate the images
factorio --load-game $1 1> /dev/null&
echo "Waiting for the game to finish rendering..."
until [ -f ~/.factorio/script-output/done ]; do
     sleep 1
done
killall factorio


# make a copy of the web template
mkdir $1
cp ./web/index.html $1/
cp ./web/script.js  $1/

# move the images and map info
mv ~/.factorio/script-output/images/      $1/
mv ~/.factorio/script-output/mapInfo.json $1/

printf "mapInfo = '" > $1/mapInfo.js
cat $1/mapInfo.json >> $1/mapInfo.js
printf "'" >> $1/mapInfo.js

# return original mod list
mv ~/.factorio/mods/mod-list.json.backup ~/.factorio/mods/mod-list.json

# generate a blank tile with the right size
imgres=$(cat $1/mapInfo.json | jq ".image_resolution")
convert blank.png -resize ${imgres}x${imgres} -colorspace RGB $1/images/blank.png

echo Compiling image merge tool
gcc imgmerge.c -Istb/ -Wall -Wextra -Wundef -Wshadow -Wunreachable-code -Winit-self -Wuninitialized -Wno-misleading-indentation -fdata-sections -ffunction-sections -std=gnu11 -Ofast -march=native -lm -o imgmerge -Wl,--gc-sections &> /dev/null

./zoomout $1 8 7 # lol maybe loop?
./zoomout $1 7 6
./zoomout $1 6 5
./zoomout $1 5 4
./zoomout $1 4 3
./zoomout $1 3 2
./zoomout $1 2 1
./zoomout $1 1 0

echo Done
echo Generated web is in $(pwd)/$1/
